// <auto-generated />
using System;
using DataLayer;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DataLayer.Migrations
{
    [DbContext(typeof(ShopContext))]
    partial class ShopContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DataLayer.Models.Company", b =>
                {
                    b.Property<int>("CompanyID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.HasKey("CompanyID");

                    b.ToTable("Companies");

                    b.HasData(
                        new
                        {
                            CompanyID = 1,
                            CompanyName = "OnePlus"
                        });
                });

            modelBuilder.Entity("DataLayer.Models.Order", b =>
                {
                    b.Property<int>("OrderID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("OrderDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2019, 9, 27, 9, 50, 1, 542, DateTimeKind.Local).AddTicks(708));

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("OrderID");

                    b.HasIndex("UserID");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("DataLayer.Models.OrderLine", b =>
                {
                    b.Property<int>("PhoneID")
                        .HasColumnType("int");

                    b.Property<int>("OrderID")
                        .HasColumnType("int");

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.HasKey("PhoneID", "OrderID");

                    b.HasIndex("OrderID");

                    b.ToTable("OrderLines");
                });

            modelBuilder.Entity("DataLayer.Models.Phone", b =>
                {
                    b.Property<int>("PhoneID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyID")
                        .HasColumnType("int");

                    b.Property<string>("PhoneName")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(30,2)");

                    b.HasKey("PhoneID");

                    b.HasIndex("CompanyID");

                    b.ToTable("Phones");

                    b.HasData(
                        new
                        {
                            PhoneID = 1,
                            CompanyID = 1,
                            PhoneName = "One",
                            Price = 399.99m
                        },
                        new
                        {
                            PhoneID = 2,
                            CompanyID = 1,
                            PhoneName = "2",
                            Price = 499.99m
                        },
                        new
                        {
                            PhoneID = 3,
                            CompanyID = 1,
                            PhoneName = "X",
                            Price = 599.99m
                        },
                        new
                        {
                            PhoneID = 4,
                            CompanyID = 1,
                            PhoneName = "3",
                            Price = 699.99m
                        },
                        new
                        {
                            PhoneID = 5,
                            CompanyID = 1,
                            PhoneName = "3T",
                            Price = 799.99m
                        },
                        new
                        {
                            PhoneID = 6,
                            CompanyID = 1,
                            PhoneName = "5",
                            Price = 899.99m
                        },
                        new
                        {
                            PhoneID = 7,
                            CompanyID = 1,
                            PhoneName = "5T",
                            Price = 999.99m
                        },
                        new
                        {
                            PhoneID = 8,
                            CompanyID = 1,
                            PhoneName = "6",
                            Price = 1299.99m
                        },
                        new
                        {
                            PhoneID = 9,
                            CompanyID = 1,
                            PhoneName = "6T",
                            Price = 1399.99m
                        },
                        new
                        {
                            PhoneID = 10,
                            CompanyID = 1,
                            PhoneName = "7",
                            Price = 1899.99m
                        },
                        new
                        {
                            PhoneID = 11,
                            CompanyID = 1,
                            PhoneName = "7 Pro",
                            Price = 1999.99m
                        });
                });

            modelBuilder.Entity("DataLayer.Models.Photo", b =>
                {
                    b.Property<int>("PhotoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("PhoneID")
                        .HasColumnType("int");

                    b.Property<string>("PhonePhoto")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PhotoID");

                    b.HasIndex("PhoneID")
                        .IsUnique();

                    b.ToTable("Photos");

                    b.HasData(
                        new
                        {
                            PhotoID = 1,
                            PhoneID = 1,
                            PhonePhoto = "https://fdn2.gsmarena.com/vv/bigpic/oneplus-one.jpg"
                        },
                        new
                        {
                            PhotoID = 2,
                            PhoneID = 2,
                            PhonePhoto = "https://fdn2.gsmarena.com/vv/bigpic/oneplus-two.jpg"
                        },
                        new
                        {
                            PhotoID = 3,
                            PhoneID = 3,
                            PhonePhoto = "https://fdn2.gsmarena.com/vv/bigpic/oneplus-x.jpg"
                        },
                        new
                        {
                            PhotoID = 4,
                            PhoneID = 4,
                            PhonePhoto = "https://fdn2.gsmarena.com/vv/bigpic/oneplus-3-.jpg"
                        },
                        new
                        {
                            PhotoID = 5,
                            PhoneID = 5,
                            PhonePhoto = "https://fdn2.gsmarena.com/vv/bigpic/oneplus-3t-.jpg"
                        },
                        new
                        {
                            PhotoID = 6,
                            PhoneID = 6,
                            PhonePhoto = "https://fdn2.gsmarena.com/vv/bigpic/oneplus-5.jpg"
                        },
                        new
                        {
                            PhotoID = 7,
                            PhoneID = 7,
                            PhonePhoto = "https://fdn2.gsmarena.com/vv/bigpic/oneplus-5t.jpg"
                        },
                        new
                        {
                            PhotoID = 8,
                            PhoneID = 8,
                            PhonePhoto = "https://fdn2.gsmarena.com/vv/bigpic/oneplus-6-red.jpg"
                        },
                        new
                        {
                            PhotoID = 9,
                            PhoneID = 9,
                            PhonePhoto = "https://fdn2.gsmarena.com/vv/bigpic/oneplus-6t-thunder-purple.jpg"
                        },
                        new
                        {
                            PhotoID = 10,
                            PhoneID = 10,
                            PhonePhoto = "https://fdn2.gsmarena.com/vv/bigpic/oneplus-7--.jpg"
                        },
                        new
                        {
                            PhotoID = 11,
                            PhoneID = 11,
                            PhonePhoto = "https://fdn2.gsmarena.com/vv/bigpic/oneplus-7-pro-r1.jpg"
                        });
                });

            modelBuilder.Entity("DataLayer.Models.User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adresse")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Efternavn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fornavn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("DataLayer.Models.Order", b =>
                {
                    b.HasOne("DataLayer.Models.User", "Users")
                        .WithMany("Order")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DataLayer.Models.OrderLine", b =>
                {
                    b.HasOne("DataLayer.Models.Order", "Order")
                        .WithMany("OrderLine")
                        .HasForeignKey("OrderID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataLayer.Models.Phone", "Phone")
                        .WithMany("OrderLine")
                        .HasForeignKey("PhoneID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DataLayer.Models.Phone", b =>
                {
                    b.HasOne("DataLayer.Models.Company", "Company")
                        .WithMany("Phone")
                        .HasForeignKey("CompanyID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DataLayer.Models.Photo", b =>
                {
                    b.HasOne("DataLayer.Models.Phone", "Phone")
                        .WithOne("Photo")
                        .HasForeignKey("DataLayer.Models.Photo", "PhoneID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
